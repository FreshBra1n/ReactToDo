{"version":3,"sources":["components/Badge/index.jsx","assets/img/remove.svg","components/List/index.jsx","assets/img/close.svg","components/AddList/index.jsx","components/Tasks/Taski.jsx","assets/img/edit.svg","assets/img/add.svg","components/Tasks/AddTaskForm.jsx","components/Tasks/index.jsx","App.js","index.js"],"names":["Badge","color","onClick","className","classNames","List","items","isRemovable","onRemove","onClickItem","activeItem","map","item","index","active","id","icon","name","tasks","length","src","remove","alt","window","confirm","axios","delete","then","removeList","AddList","colors","onAdd","React","useState","visiblePopup","setVisiblePopup","selectedColor","selectColor","isLoading","setIsLoading","inputValue","setInputValue","useEffect","Array","isArray","onClose","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","closeSvg","value","onChange","e","target","type","placeholder","post","colorId","data","filter","c","listObj","catch","alert","finally","Taski","text","completed","list","onEdit","onComplete","checked","htmlFor","AddTaskForm","onAddTask","visibleform","setFormVisible","toggleFormVisible","obj","listId","disabled","add","Tasks","onEditTitle","withoutEmpty","onRemoveTask","onCompleteTask","onEditTask","style","hex","newTitle","prompt","patch","editTitle","pen","task","App","lists","setLists","setColors","setActiveItem","history","useHistory","useLocation","get","onEditListTitle","title","newList","taskObj","newTaskText","taskId","location","pathname","split","find","Number","push","newLists","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d70f0f6e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Badge.scss'\r\nimport classNames from 'classnames'\r\n\r\n\r\nconst Badge = ({ color, onClick, className }) => (\r\n    <i onClick={onClick}\r\n        className={classNames('badge', { [`badge--${color}`]: color }, className)}>\r\n\r\n    </i>\r\n\r\n\r\n)\r\nexport default Badge","export default __webpack_public_path__ + \"static/media/remove.f5660af3.svg\";","import React from 'react'\r\nimport './List.scss'\r\nimport classNames from 'classnames'\r\nimport Badge from '../Badge/index'\r\nimport remove from '../../assets/img/remove.svg'\r\nimport axios from 'axios'\r\n\r\nfunction List({\r\n    items,\r\n    isRemovable,\r\n    onClick,\r\n    onRemove,\r\n    onClickItem,\r\n    activeItem }) {\r\n\r\n\r\n\r\n    const removeList = (item) => {\r\n        if (window.confirm('Вы действительно хотите удалить список ?')) {\r\n            axios.delete('http://localhost:3003/lists/' + item.id).then(() => {\r\n                onRemove(item.id);\r\n            });\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <ul onClick={onClick} className='list'>\r\n            {items.map((item, index) => (\r\n                <li\r\n                    key={index}\r\n                    className={classNames(item.className, {\r\n                        active: item.active\r\n                            ? item.active\r\n                            : activeItem && activeItem.id === item.id\r\n                    })}\r\n                    onClick={onClickItem ? () => onClickItem(item) : null}\r\n                >\r\n                    <i>{item.icon ? item.icon : <Badge color={item.color.name} />}</i>\r\n                    <span>\r\n                        {item.name}\r\n                        {item.tasks && ` (${item.tasks.length})`}\r\n                    </span>\r\n                    {isRemovable && <img\r\n                        className='list__remove-icon'\r\n                        src={remove}\r\n                        alt='remove'\r\n                        onClick={() => removeList(item)} />}\r\n                </li>\r\n            ))\r\n            }\r\n\r\n\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default List","export default __webpack_public_path__ + \"static/media/close.79bd8e40.svg\";","import React, { useEffect } from 'react'\r\nimport List from '../List/index'\r\nimport Badge from '../Badge/index'\r\n\r\n\r\nimport closeSvg from '../../assets/img/close.svg'\r\n\r\nimport './AddList.scss'\r\nimport axios from 'axios'\r\n\r\nconst AddList = ({ colors, onAdd }) => {\r\n    const [visiblePopup, setVisiblePopup] = React.useState(false)\r\n    const [selectedColor, selectColor] = React.useState(3)\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [inputValue, setInputValue] = React.useState('')\r\n\r\n    useEffect(() => {\r\n        if (Array.isArray(colors)) {\r\n            selectColor(colors[0].id)\r\n        }\r\n    }, [colors])\r\n\r\n    const onClose = () => {\r\n        setVisiblePopup(false);\r\n        setInputValue('')\r\n        selectColor(colors[0].id)\r\n    }\r\n\r\n\r\n\r\n    const addList = () => {\r\n        if (!inputValue) {\r\n            alert('Введите название списка');\r\n            return\r\n        }\r\n        setIsLoading(true);\r\n        axios\r\n            .post('http://localhost:3003/lists', {\r\n                name: inputValue,\r\n                colorId: selectedColor\r\n            })\r\n            .then(({ data }) => {\r\n                const color = colors.filter(c => c.id === selectedColor)[0];\r\n                const listObj = { ...data, color, tasks: [] };\r\n                onAdd(listObj);\r\n                onClose();\r\n            }).catch(() => {\r\n                alert('Ошибка при добавлении задачи !')\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className='add-list'>\r\n            <List\r\n                onClick={() => setVisiblePopup(true)}\r\n                items={\r\n                    [\r\n                        {\r\n                            className: 'list__add-button',\r\n                            icon: <svg width=\"12\" height=\"12\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path d=\"M8 1V15\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                <path d=\"M1 8H15\" stroke=\"black\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n\r\n                            </svg>\r\n                            ,\r\n                            name: 'Добавить список'\r\n                        }\r\n                    ]\r\n                } />\r\n            {visiblePopup && (\r\n                <div className=\"add-list__popup\">\r\n                    <img\r\n                        onClick={onClose}\r\n                        src={closeSvg}\r\n                        alt=\"Close button\"\r\n                        className=\"add-list__popup-close-btn\"\r\n                    />\r\n\r\n                    <input\r\n                        value={inputValue}\r\n                        onChange={e => setInputValue(e.target.value)}\r\n                        className=\"field\"\r\n                        type=\"text\"\r\n                        placeholder=\"Название списка\"\r\n                    />\r\n\r\n                    <div className=\"add-list__popup-colors\">\r\n                        {colors.map(color => (\r\n                            <Badge\r\n                                onClick={() => selectColor(color.id)}\r\n                                key={color.id}\r\n                                color={color.name}\r\n                                className={selectedColor === color.id && 'active'}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                    <button onClick={addList} className='button'> {isLoading ? 'Добавление...' : 'Добавить'}</button>\r\n                </div>\r\n            )}\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default AddList","import React from 'react'\r\n\r\nconst Taski=({ id, text, completed, list, onRemove, onEdit, onComplete }) => {\r\n    const onChangeCheckbox = e => {\r\n        onComplete(list.id, id, e.target.checked);\r\n    };\r\n\r\n    return (\r\n        <div key={id} className=\"tasks__items-row\">\r\n            <div className=\"checkbox\">\r\n                <input\r\n                    onChange={onChangeCheckbox}\r\n                    id={`task-${id}`}\r\n                    type=\"checkbox\"\r\n                    checked={completed}\r\n                />\r\n                <label htmlFor={`task-${id}`}>\r\n                    <svg\r\n                        width=\"11\"\r\n                        height=\"8\"\r\n                        viewBox=\"0 0 11 8\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\"\r\n                            stroke=\"#000\"\r\n                            strokeWidth=\"1.5\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                        />\r\n                    </svg>\r\n                </label>\r\n            </div>\r\n            <p>{text}</p>\r\n            <div className=\"tasks__items-row-actions\">\r\n                <div onClick={(list) => onEdit(list.id, { id, text })}>\r\n                    <svg\r\n                        width=\"15\"\r\n                        height=\"15\"\r\n                        viewBox=\"0 0 15 15\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M0 12.0504V14.5834C0 14.8167 0.183308 15 0.41661 15H2.9496C3.05792 15 3.16624 14.9583 3.24123 14.875L12.34 5.78458L9.21542 2.66001L0.124983 11.7504C0.0416611 11.8338 0 11.9337 0 12.0504ZM14.7563 3.36825C14.8336 3.29116 14.8949 3.1996 14.9367 3.0988C14.9785 2.99801 15 2.88995 15 2.78083C15 2.6717 14.9785 2.56365 14.9367 2.46285C14.8949 2.36205 14.8336 2.27049 14.7563 2.19341L12.8066 0.24367C12.7295 0.166428 12.638 0.105146 12.5372 0.0633343C12.4364 0.021522 12.3283 0 12.2192 0C12.1101 0 12.002 0.021522 11.9012 0.0633343C11.8004 0.105146 11.7088 0.166428 11.6318 0.24367L10.107 1.76846L13.2315 4.89304L14.7563 3.36825V3.36825Z\"\r\n                            fill=\"black\"\r\n                        />\r\n                    </svg>\r\n                </div>\r\n                <div onClick={(list) => onRemove(list.id, id)}>\r\n                    <svg\r\n                        width=\"11\"\r\n                        height=\"11\"\r\n                        viewBox=\"0 0 11 11\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M6.87215 5.5L10.7129 1.65926C10.8952 1.47731 10.9977 1.23039 10.9979 0.972832C10.9982 0.715276 10.8961 0.468178 10.7141 0.285898C10.5321 0.103617 10.2852 0.00108525 10.0277 0.000857792C9.77011 0.000630336 9.52302 0.102726 9.34074 0.284685L5.5 4.12542L1.65926 0.284685C1.47698 0.102404 1.22976 0 0.971974 0C0.714191 0 0.466965 0.102404 0.284685 0.284685C0.102404 0.466965 0 0.714191 0 0.971974C0 1.22976 0.102404 1.47698 0.284685 1.65926L4.12542 5.5L0.284685 9.34074C0.102404 9.52302 0 9.77024 0 10.028C0 10.2858 0.102404 10.533 0.284685 10.7153C0.466965 10.8976 0.714191 11 0.971974 11C1.22976 11 1.47698 10.8976 1.65926 10.7153L5.5 6.87458L9.34074 10.7153C9.52302 10.8976 9.77024 11 10.028 11C10.2858 11 10.533 10.8976 10.7153 10.7153C10.8976 10.533 11 10.2858 11 10.028C11 9.77024 10.8976 9.52302 10.7153 9.34074L6.87215 5.5Z\"\r\n                            fill=\"black\"\r\n                        />\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Taski","export default __webpack_public_path__ + \"static/media/edit.1bda04de.svg\";","export default __webpack_public_path__ + \"static/media/add.c4fa83e1.svg\";","import axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport add from '../../assets/img/add.svg'\r\n\r\n\r\n\r\nfunction AddTaskForm({ list, onAddTask }) {\r\n    const [visibleform, setFormVisible] = useState(false)\r\n    const [inputValue, setInputValue] = useState('')\r\n    const [isLoading, setIsLoading] = useState('')\r\n\r\n    const toggleFormVisible = () => {\r\n        setFormVisible(!visibleform)\r\n        setInputValue('')\r\n    }\r\n\r\n    const addTask = () => {\r\n        const obj = {\r\n            listId: list.id,\r\n            text: inputValue,\r\n            completed: false\r\n        };\r\n        setIsLoading(true)\r\n        axios.post('http://localhost:3003/tasks/', obj).then(({ data }) => {\r\n            onAddTask(list.id, data)\r\n            toggleFormVisible()\r\n        }).catch(() => {\r\n            alert('Ошибка при добавлении задачи !')\r\n        }).finally(() => {\r\n            setIsLoading(false)\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"tasks__form\">\r\n            {!visibleform ? (<div onClick={toggleFormVisible} className=\"tasks__form-new\">\r\n                <img src={add} alt=\"Add icon\" />\r\n                <span>Новая задача</span>\r\n            </div>) :\r\n                (<div className=\"tasks__form-block\">\r\n                    <input\r\n                        className=\"field\"\r\n                        type=\"text\"\r\n                        placeholder=\"Текст задачи\"\r\n                        onChange={(e) => setInputValue(e.target.value)}\r\n                    />\r\n                    <button onClick={addTask} disabled={isLoading} className='button'>{isLoading ? 'Добавление...' : 'Добавить задачу'}</button>\r\n                    <button onClick={toggleFormVisible} className='button button--grey'>Отмена</button>\r\n                </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTaskForm","import React from 'react'\r\nimport './tasks.scss'\r\nimport axios from 'axios'\r\nimport Taski from './Taski'\r\n\r\nimport pen from '../../assets/img/edit.svg'\r\n\r\nimport AddTaskForm from './AddTaskForm'\r\n\r\n\r\nfunction Tasks({ list, onEditTitle, onAddTask, withoutEmpty, onRemoveTask, onCompleteTask, onEditTask }) {\r\n\r\n    const editTitle = () => {\r\n        const newTitle = window.prompt('Название заголовка', list.name)\r\n        if (newTitle) {\r\n            onEditTitle(list.id, newTitle)\r\n            axios.patch(' http://localhost:3003/lists/' + list.id, {\r\n                name: newTitle\r\n            }).catch(() => {\r\n                alert('Не удалось обновить название списка !')\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='tasks'>\r\n            <h2 style={{ color: list.color.hex }} className='tasks__title'>\r\n                {list.name}\r\n                <img onClick={() => editTitle()} src={pen} alt='edit' />\r\n            </h2>\r\n            <div className=\"tasks__items\">\r\n                {!withoutEmpty && list.tasks && !list.tasks.length && <h2>Задачи отсутствуют</h2>}\r\n                {list.tasks && list.tasks.map(task => (\r\n                    <Taski\r\n                        key={task.id}\r\n                        list={list}\r\n                        onRemove={onRemoveTask}\r\n                        onEdit={onEditTask}\r\n                        onComplete={onCompleteTask}\r\n                        {...task} />\r\n                ))}\r\n                <AddTaskForm key={list.id} list={list} onAddTask={onAddTask} />\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport default Tasks","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\n\nimport { List, AddList, Tasks } from './components/index'\nimport { Route, useHistory, useLocation } from 'react-router-dom'\n\n\nfunction App() {\n  const [lists, setLists] = useState(null)\n  const [colors, setColors] = useState(null)\n  const [activeItem, setActiveItem] = useState(null)\n  let history = useHistory()\n  let location = useLocation()\n  useEffect(() => {\n    axios\n      .get('http://localhost:3003/lists?_expand=color&_embed=tasks')\n      .then(({ data }) => {\n        setLists(data);\n      });\n    axios.get('http://localhost:3003/colors').then(({ data }) => {\n      setColors(data);\n    });\n  }, []);\n  const onEditListTitle = (id, title) => {\n    const newList = lists.map(item => {\n      if (item.id === id) {\n        item.name = title;\n      }\n      return item\n    })\n    setLists(newList);\n  }\n\n\n\n  const onAddTask = (listId, taskObj) => {\n    const newList = lists.map(item => {\n      if (item.id === listId) {\n        item.tasks = [...item.tasks, taskObj]\n      }\n      return item\n    })\n    setLists(newList)\n  };\n\n  const onAddList = obj => {\n    const newList = [...lists, obj];\n    setLists(newList);\n  };\n\n  const onEditTask = (listId, taskObj) => {\n    const newTaskText = window.prompt('Текст задачи', taskObj.text);\n\n    if (!newTaskText) {\n      return;\n    }\n\n    const newList = lists.map(list => {\n      if (list.id === listId) {\n        list.tasks = list.tasks.map(task => {\n          if (task.id === taskObj.id) {\n            task.text = newTaskText;\n          }\n          return task;\n        });\n      }\n      return list;\n    });\n    setLists(newList);\n    axios\n      .patch('http://localhost:3003/tasks/' + taskObj.id, {\n        text: newTaskText\n      })\n      .catch(() => {\n        alert('Не удалось обновить задачу');\n      });\n  };\n  const onCompleteTask = (listId, taskId, completed) => {\n    const newList = lists.map(list => {\n      if (list.id === listId) {\n        list.tasks = list.tasks.map(task => {\n          if (task.id === taskId) {\n            task.completed = completed;\n          }\n          return task;\n        });\n      }\n      return list;\n    });\n    setLists(newList);\n    axios\n      .patch('http://localhost:3003/tasks/' + taskId, {\n        completed\n      })\n      .catch(() => {\n        alert('Не удалось обновить задачу');\n      });\n  };\n\n\n  const onRemoveTask = (listId, taskId) => {\n    if (window.confirm('Вы действительно хотите удалить задачу ?')) {\n      const newList = lists.map(item => {\n        if (item.id === listId) {\n          item.tasks = item.tasks.filter(task => task.id !== taskId)\n        }\n        return item\n      })\n      setLists(newList);\n      axios.delete('http://localhost:3003/tasks/' + taskId)\n        .catch(() => {\n          alert('Не удалось удалить задачу !')\n        });\n    }\n  }\n\n  useEffect(() => {\n    const listId = history.location.pathname.split('lists/')[1]\n    if (lists) {\n      const list = lists.find(list => list.id === Number(listId))\n      setActiveItem(list)\n    }\n  }, [lists, history.location.pathname])\n\n\n  return (\n    <div className='todo'>\n      <div className='todo__sidebar'>\n        <List\n          onClickItem={() => {\n            history.push(`/`)\n          }}\n          items={[{\n            active: !activeItem,\n            icon: (\n              <svg width=\"14\"\n                height=\"12\"\n                viewBox=\"0 0 14 12\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M10.96 5.10001H5.74001C5.24321 5.10001 5.20001 5.50231 5.20001 6.00001C5.20001 6.49771 5.24321 6.90001 5.74001 6.90001H10.96C11.4568 6.90001 11.5 6.49771 11.5 6.00001C11.5 5.50231 11.4568 5.10001 10.96 5.10001ZM12.76 9.60001H5.74001C5.24321 9.60001 5.20001 10.0023 5.20001 10.5C5.20001 10.9977 5.24321 11.4 5.74001 11.4H12.76C13.2568 11.4 13.3 10.9977 13.3 10.5C13.3 10.0023 13.2568 9.60001 12.76 9.60001ZM5.74001 2.40001H12.76C13.2568 2.40001 13.3 1.99771 13.3 1.50001C13.3 1.00231 13.2568 0.600006 12.76 0.600006H5.74001C5.24321 0.600006 5.20001 1.00231 5.20001 1.50001C5.20001 1.99771 5.24321 2.40001 5.74001 2.40001ZM2.86001 5.10001H1.24001C0.743212 5.10001 0.700012 5.50231 0.700012 6.00001C0.700012 6.49771 0.743212 6.90001 1.24001 6.90001H2.86001C3.35681 6.90001 3.40001 6.49771 3.40001 6.00001C3.40001 5.50231 3.35681 5.10001 2.86001 5.10001ZM2.86001 9.60001H1.24001C0.743212 9.60001 0.700012 10.0023 0.700012 10.5C0.700012 10.9977 0.743212 11.4 1.24001 11.4H2.86001C3.35681 11.4 3.40001 10.9977 3.40001 10.5C3.40001 10.0023 3.35681 9.60001 2.86001 9.60001ZM2.86001 0.600006H1.24001C0.743212 0.600006 0.700012 1.00231 0.700012 1.50001C0.700012 1.99771 0.743212 2.40001 1.24001 2.40001H2.86001C3.35681 2.40001 3.40001 1.99771 3.40001 1.50001C3.40001 1.00231 3.35681 0.600006 2.86001 0.600006Z\"\n                  fill=\"#7C7C7C\" />\n              </svg>\n            ),\n            name: 'All tasks',\n            active: true\n          }]} />\n        {lists ? (\n          <List\n            items={lists}\n            onRemove={id => {\n              const newLists = lists.filter(item => item.id !== id);\n              setLists(newLists);\n            }}\n            onClickItem={list => {\n              history.push(`/lists/${list.id}`)\n            }\n            }\n            activeItem={activeItem}\n            isRemovable\n          />\n        ) : (\n          'Загрузка...'\n        )}\n        <AddList onAdd={onAddList} colors={colors} />\n      </div>\n      <div className=\"todo__tasks\">\n        <Route exact path='/'>\n          {lists &&\n            lists.map(list => (\n              <Tasks key={list.id}\n                list={list}\n                onAddTask={onAddTask}\n                onEditTitle={onEditListTitle}\n                onRemoveTask={onRemoveTask}\n                onEditTask={onEditTask}\n                onCompleteTask={onCompleteTask}\n                withoutEmpty\n              />\n            ))\n          }\n        </Route>\n        <Route path='/lists/:id'>\n          {lists && activeItem &&\n            <Tasks list={activeItem}\n              onAddTask={onAddTask}\n              onEditTitle={onEditListTitle}\n              onRemoveTask={onRemoveTask}\n              onEditTask={onEditTask}\n              onCompleteTask={onCompleteTask}\n            />}\n        </Route>\n\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter >,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}